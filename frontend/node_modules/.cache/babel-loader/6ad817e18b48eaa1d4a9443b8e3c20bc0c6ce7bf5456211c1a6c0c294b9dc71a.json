{"ast":null,"code":"var _jsxFileName = \"/Users/deannewton/Projects/Scene-Gen/frontend/src/components/DesignCanvas.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DesignCanvas = ({\n  floorplanUrl,\n  selectedAsset,\n  sceneElements,\n  onElementPlace,\n  onElementMove\n}) => {\n  _s();\n  const canvasRef = useRef();\n  const [canvasDimensions] = useState({\n    width: 800,\n    height: 600\n  });\n  const handleCanvasClick = e => {\n    if (!selectedAsset) return;\n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    onElementPlace({\n      assetId: selectedAsset.id,\n      positionX: x,\n      positionY: y,\n      rotationZ: 0,\n      scaleX: 1,\n      scaleY: 1\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"design-canvas\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-container\",\n      style: {\n        border: '1px solid #ccc',\n        borderRadius: '4px',\n        position: 'relative',\n        width: canvasDimensions.width,\n        height: canvasDimensions.height,\n        overflow: 'hidden',\n        cursor: selectedAsset ? 'crosshair' : 'default'\n      },\n      children: [floorplanUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: floorplanUrl,\n        alt: \"Floorplan\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain',\n          pointerEvents: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: canvasRef,\n        onClick: handleCanvasClick,\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          zIndex: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), sceneElements.map(element => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          position: 'absolute',\n          left: element.position_x - 30,\n          top: element.position_y - 30,\n          width: '60px',\n          height: '60px',\n          zIndex: 2,\n          cursor: 'move'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: element.asset_image_url,\n          alt: \"Asset\",\n          style: {\n            width: '100%',\n            height: '100%',\n            objectFit: 'cover',\n            border: '2px solid #007bff',\n            borderRadius: '4px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-controls\",\n      style: {\n        marginTop: '10px',\n        padding: '10px',\n        backgroundColor: '#f5f5f5',\n        borderRadius: '4px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '0',\n          fontSize: '14px',\n          color: '#666'\n        },\n        children: selectedAsset ? `Click on the canvas to place: ${selectedAsset.type}` : 'Select an asset from the library to place it on the canvas'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), sceneElements.length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          margin: '5px 0 0 0',\n          fontSize: '12px',\n          color: '#999'\n        },\n        children: [\"Assets placed: \", sceneElements.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DesignCanvas, \"AJZLQmJYasJCmwOekufcZx7PSmA=\");\n_c = DesignCanvas;\nexport default DesignCanvas;\nvar _c;\n$RefreshReg$(_c, \"DesignCanvas\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","DesignCanvas","floorplanUrl","selectedAsset","sceneElements","onElementPlace","onElementMove","_s","canvasRef","canvasDimensions","width","height","handleCanvasClick","e","rect","target","getBoundingClientRect","x","clientX","left","y","clientY","top","assetId","id","positionX","positionY","rotationZ","scaleX","scaleY","className","children","style","border","borderRadius","position","overflow","cursor","src","alt","objectFit","pointerEvents","fileName","_jsxFileName","lineNumber","columnNumber","ref","onClick","zIndex","map","element","position_x","position_y","asset_image_url","marginTop","padding","backgroundColor","margin","fontSize","color","type","length","_c","$RefreshReg$"],"sources":["/Users/deannewton/Projects/Scene-Gen/frontend/src/components/DesignCanvas.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\n\nconst DesignCanvas = ({ \n  floorplanUrl, \n  selectedAsset, \n  sceneElements, \n  onElementPlace,\n  onElementMove \n}) => {\n  const canvasRef = useRef();\n  const [canvasDimensions] = useState({ width: 800, height: 600 });\n\n  const handleCanvasClick = (e) => {\n    if (!selectedAsset) return;\n    \n    const rect = e.target.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    \n    onElementPlace({\n      assetId: selectedAsset.id,\n      positionX: x,\n      positionY: y,\n      rotationZ: 0,\n      scaleX: 1,\n      scaleY: 1\n    });\n  };\n\n  return (\n    <div className=\"design-canvas\">\n      <div className=\"canvas-container\" style={{ \n        border: '1px solid #ccc', \n        borderRadius: '4px',\n        position: 'relative',\n        width: canvasDimensions.width,\n        height: canvasDimensions.height,\n        overflow: 'hidden',\n        cursor: selectedAsset ? 'crosshair' : 'default'\n      }}>\n        {/* Background floorplan */}\n        {floorplanUrl && (\n          <img\n            src={floorplanUrl}\n            alt=\"Floorplan\"\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              objectFit: 'contain',\n              pointerEvents: 'none'\n            }}\n          />\n        )}\n        \n        {/* Click overlay */}\n        <div\n          ref={canvasRef}\n          onClick={handleCanvasClick}\n          style={{\n            position: 'absolute',\n            top: 0,\n            left: 0,\n            width: '100%',\n            height: '100%',\n            zIndex: 1\n          }}\n        />\n        \n        {/* Placed scene elements */}\n        {sceneElements.map((element) => (\n          <div\n            key={element.id}\n            style={{\n              position: 'absolute',\n              left: element.position_x - 30,\n              top: element.position_y - 30,\n              width: '60px',\n              height: '60px',\n              zIndex: 2,\n              cursor: 'move'\n            }}\n          >\n            <img\n              src={element.asset_image_url}\n              alt=\"Asset\"\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'cover',\n                border: '2px solid #007bff',\n                borderRadius: '4px'\n              }}\n            />\n          </div>\n        ))}\n      </div>\n      \n      <div className=\"canvas-controls\" style={{ \n        marginTop: '10px', \n        padding: '10px', \n        backgroundColor: '#f5f5f5', \n        borderRadius: '4px' \n      }}>\n        <p style={{ margin: '0', fontSize: '14px', color: '#666' }}>\n          {selectedAsset \n            ? `Click on the canvas to place: ${selectedAsset.type}` \n            : 'Select an asset from the library to place it on the canvas'\n          }\n        </p>\n        {sceneElements.length > 0 && (\n          <p style={{ margin: '5px 0 0 0', fontSize: '12px', color: '#999' }}>\n            Assets placed: {sceneElements.length}\n          </p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DesignCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useRef,useEffect}from'react';import{Stage,Layer,Image as KonvaImage,Rect}from'react-konva';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const FloorplanImage=_ref=>{let{src,onStageClick}=_ref;const[image,setImage]=useState(null);useEffect(()=>{if(src){const img=new window.Image();img.onload=()=>setImage(img);img.src=src;}},[src]);return/*#__PURE__*/_jsx(KonvaImage,{image:image,width:image?800:0,height:image?600:0,listening:false});};const AssetImage=_ref2=>{let{src,x,y,rotation=0,scale=1,onDragEnd,id}=_ref2;const[image,setImage]=useState(null);useEffect(()=>{if(src){const img=new window.Image();img.onload=()=>setImage(img);img.src=src;}},[src]);return/*#__PURE__*/_jsx(KonvaImage,{id:id,image:image,x:x,y:y,width:image?60*scale:60,height:image?60*scale:60,rotation:rotation,draggable:true,onDragEnd:onDragEnd,offsetX:image?60*scale/2:30,offsetY:image?60*scale/2:30});};const DesignCanvas=_ref3=>{let{floorplanUrl,selectedAsset,sceneElements,onElementPlace,onElementMove}=_ref3;const stageRef=useRef();const[stageDimensions,setStageDimensions]=useState({width:800,height:600});const handleStageClick=e=>{// Only place asset if we have a selected asset and clicked on empty area\nif(selectedAsset&&e.target===e.target.getStage()){const pos=e.target.getPointerPosition();onElementPlace({assetId:selectedAsset.id,positionX:pos.x,positionY:pos.y,rotationZ:0,scaleX:1,scaleY:1});}};const handleAssetDragEnd=(elementId,e)=>{const newPos=e.target.position();onElementMove(elementId,{positionX:newPos.x,positionY:newPos.y});};return/*#__PURE__*/_jsxs(\"div\",{className:\"design-canvas\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"canvas-container\",style:{border:'1px solid #ccc',borderRadius:'4px'},children:/*#__PURE__*/_jsx(Stage,{ref:stageRef,width:stageDimensions.width,height:stageDimensions.height,onClick:handleStageClick,onTap:handleStageClick,children:/*#__PURE__*/_jsxs(Layer,{children:[floorplanUrl&&/*#__PURE__*/_jsx(FloorplanImage,{src:floorplanUrl,onStageClick:handleStageClick}),sceneElements.map(element=>/*#__PURE__*/_jsx(AssetImage,{id:element.id,src:element.asset_image_url,x:element.position_x,y:element.position_y,rotation:element.rotation_z,scale:element.scale_x,onDragEnd:e=>handleAssetDragEnd(element.id,e)},element.id))]})})}),/*#__PURE__*/_jsx(\"div\",{className:\"canvas-controls\",style:{marginTop:'10px',padding:'10px',backgroundColor:'#f5f5f5',borderRadius:'4px'},children:/*#__PURE__*/_jsx(\"p\",{style:{margin:'0',fontSize:'14px',color:'#666'},children:selectedAsset?\"Click on the canvas to place: \".concat(selectedAsset.type):'Select an asset from the library to place it on the canvas'})})]});};export default DesignCanvas;","map":{"version":3,"names":["React","useState","useRef","useEffect","Stage","Layer","Image","KonvaImage","Rect","jsx","_jsx","jsxs","_jsxs","FloorplanImage","_ref","src","onStageClick","image","setImage","img","window","onload","width","height","listening","AssetImage","_ref2","x","y","rotation","scale","onDragEnd","id","draggable","offsetX","offsetY","DesignCanvas","_ref3","floorplanUrl","selectedAsset","sceneElements","onElementPlace","onElementMove","stageRef","stageDimensions","setStageDimensions","handleStageClick","e","target","getStage","pos","getPointerPosition","assetId","positionX","positionY","rotationZ","scaleX","scaleY","handleAssetDragEnd","elementId","newPos","position","className","children","style","border","borderRadius","ref","onClick","onTap","map","element","asset_image_url","position_x","position_y","rotation_z","scale_x","marginTop","padding","backgroundColor","margin","fontSize","color","concat","type"],"sources":["/Users/deannewton/Projects/Scene-Gen/frontend/src/components/DesignCanvas.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { Stage, Layer, Image as KonvaImage, Rect } from 'react-konva';\n\nconst FloorplanImage = ({ src, onStageClick }) => {\n  const [image, setImage] = useState(null);\n  \n  useEffect(() => {\n    if (src) {\n      const img = new window.Image();\n      img.onload = () => setImage(img);\n      img.src = src;\n    }\n  }, [src]);\n  \n  return (\n    <KonvaImage\n      image={image}\n      width={image ? 800 : 0}\n      height={image ? 600 : 0}\n      listening={false}\n    />\n  );\n};\n\nconst AssetImage = ({ src, x, y, rotation = 0, scale = 1, onDragEnd, id }) => {\n  const [image, setImage] = useState(null);\n  \n  useEffect(() => {\n    if (src) {\n      const img = new window.Image();\n      img.onload = () => setImage(img);\n      img.src = src;\n    }\n  }, [src]);\n  \n  return (\n    <KonvaImage\n      id={id}\n      image={image}\n      x={x}\n      y={y}\n      width={image ? 60 * scale : 60}\n      height={image ? 60 * scale : 60}\n      rotation={rotation}\n      draggable\n      onDragEnd={onDragEnd}\n      offsetX={image ? (60 * scale) / 2 : 30}\n      offsetY={image ? (60 * scale) / 2 : 30}\n    />\n  );\n};\n\nconst DesignCanvas = ({ \n  floorplanUrl, \n  selectedAsset, \n  sceneElements, \n  onElementPlace,\n  onElementMove \n}) => {\n  const stageRef = useRef();\n  const [stageDimensions, setStageDimensions] = useState({ width: 800, height: 600 });\n\n  const handleStageClick = (e) => {\n    // Only place asset if we have a selected asset and clicked on empty area\n    if (selectedAsset && e.target === e.target.getStage()) {\n      const pos = e.target.getPointerPosition();\n      onElementPlace({\n        assetId: selectedAsset.id,\n        positionX: pos.x,\n        positionY: pos.y,\n        rotationZ: 0,\n        scaleX: 1,\n        scaleY: 1\n      });\n    }\n  };\n\n  const handleAssetDragEnd = (elementId, e) => {\n    const newPos = e.target.position();\n    onElementMove(elementId, {\n      positionX: newPos.x,\n      positionY: newPos.y\n    });\n  };\n\n  return (\n    <div className=\"design-canvas\">\n      <div className=\"canvas-container\" style={{ border: '1px solid #ccc', borderRadius: '4px' }}>\n        <Stage\n          ref={stageRef}\n          width={stageDimensions.width}\n          height={stageDimensions.height}\n          onClick={handleStageClick}\n          onTap={handleStageClick}\n        >\n          <Layer>\n            {/* Background floorplan */}\n            {floorplanUrl && (\n              <FloorplanImage src={floorplanUrl} onStageClick={handleStageClick} />\n            )}\n            \n            {/* Placed scene elements */}\n            {sceneElements.map((element) => (\n              <AssetImage\n                key={element.id}\n                id={element.id}\n                src={element.asset_image_url}\n                x={element.position_x}\n                y={element.position_y}\n                rotation={element.rotation_z}\n                scale={element.scale_x}\n                onDragEnd={(e) => handleAssetDragEnd(element.id, e)}\n              />\n            ))}\n\n            {/* Preview of selected asset following cursor - could be added later */}\n          </Layer>\n        </Stage>\n      </div>\n      \n      <div className=\"canvas-controls\" style={{ marginTop: '10px', padding: '10px', backgroundColor: '#f5f5f5', borderRadius: '4px' }}>\n        <p style={{ margin: '0', fontSize: '14px', color: '#666' }}>\n          {selectedAsset \n            ? `Click on the canvas to place: ${selectedAsset.type}` \n            : 'Select an asset from the library to place it on the canvas'\n          }\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default DesignCanvas;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,MAAM,CAAEC,SAAS,KAAQ,OAAO,CAC1D,OAASC,KAAK,CAAEC,KAAK,CAAEC,KAAK,GAAI,CAAAC,UAAU,CAAEC,IAAI,KAAQ,aAAa,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEtE,KAAM,CAAAC,cAAc,CAAGC,IAAA,EAA2B,IAA1B,CAAEC,GAAG,CAAEC,YAAa,CAAC,CAAAF,IAAA,CAC3C,KAAM,CAACG,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExCE,SAAS,CAAC,IAAM,CACd,GAAIY,GAAG,CAAE,CACP,KAAM,CAAAI,GAAG,CAAG,GAAI,CAAAC,MAAM,CAACd,KAAK,CAAC,CAAC,CAC9Ba,GAAG,CAACE,MAAM,CAAG,IAAMH,QAAQ,CAACC,GAAG,CAAC,CAChCA,GAAG,CAACJ,GAAG,CAAGA,GAAG,CACf,CACF,CAAC,CAAE,CAACA,GAAG,CAAC,CAAC,CAET,mBACEL,IAAA,CAACH,UAAU,EACTU,KAAK,CAAEA,KAAM,CACbK,KAAK,CAAEL,KAAK,CAAG,GAAG,CAAG,CAAE,CACvBM,MAAM,CAAEN,KAAK,CAAG,GAAG,CAAG,CAAE,CACxBO,SAAS,CAAE,KAAM,CAClB,CAAC,CAEN,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGC,KAAA,EAA2D,IAA1D,CAAEX,GAAG,CAAEY,CAAC,CAAEC,CAAC,CAAEC,QAAQ,CAAG,CAAC,CAAEC,KAAK,CAAG,CAAC,CAAEC,SAAS,CAAEC,EAAG,CAAC,CAAAN,KAAA,CACvE,KAAM,CAACT,KAAK,CAAEC,QAAQ,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAExCE,SAAS,CAAC,IAAM,CACd,GAAIY,GAAG,CAAE,CACP,KAAM,CAAAI,GAAG,CAAG,GAAI,CAAAC,MAAM,CAACd,KAAK,CAAC,CAAC,CAC9Ba,GAAG,CAACE,MAAM,CAAG,IAAMH,QAAQ,CAACC,GAAG,CAAC,CAChCA,GAAG,CAACJ,GAAG,CAAGA,GAAG,CACf,CACF,CAAC,CAAE,CAACA,GAAG,CAAC,CAAC,CAET,mBACEL,IAAA,CAACH,UAAU,EACTyB,EAAE,CAAEA,EAAG,CACPf,KAAK,CAAEA,KAAM,CACbU,CAAC,CAAEA,CAAE,CACLC,CAAC,CAAEA,CAAE,CACLN,KAAK,CAAEL,KAAK,CAAG,EAAE,CAAGa,KAAK,CAAG,EAAG,CAC/BP,MAAM,CAAEN,KAAK,CAAG,EAAE,CAAGa,KAAK,CAAG,EAAG,CAChCD,QAAQ,CAAEA,QAAS,CACnBI,SAAS,MACTF,SAAS,CAAEA,SAAU,CACrBG,OAAO,CAAEjB,KAAK,CAAI,EAAE,CAAGa,KAAK,CAAI,CAAC,CAAG,EAAG,CACvCK,OAAO,CAAElB,KAAK,CAAI,EAAE,CAAGa,KAAK,CAAI,CAAC,CAAG,EAAG,CACxC,CAAC,CAEN,CAAC,CAED,KAAM,CAAAM,YAAY,CAAGC,KAAA,EAMf,IANgB,CACpBC,YAAY,CACZC,aAAa,CACbC,aAAa,CACbC,cAAc,CACdC,aACF,CAAC,CAAAL,KAAA,CACC,KAAM,CAAAM,QAAQ,CAAGzC,MAAM,CAAC,CAAC,CACzB,KAAM,CAAC0C,eAAe,CAAEC,kBAAkB,CAAC,CAAG5C,QAAQ,CAAC,CAAEqB,KAAK,CAAE,GAAG,CAAEC,MAAM,CAAE,GAAI,CAAC,CAAC,CAEnF,KAAM,CAAAuB,gBAAgB,CAAIC,CAAC,EAAK,CAC9B;AACA,GAAIR,aAAa,EAAIQ,CAAC,CAACC,MAAM,GAAKD,CAAC,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAE,CACrD,KAAM,CAAAC,GAAG,CAAGH,CAAC,CAACC,MAAM,CAACG,kBAAkB,CAAC,CAAC,CACzCV,cAAc,CAAC,CACbW,OAAO,CAAEb,aAAa,CAACP,EAAE,CACzBqB,SAAS,CAAEH,GAAG,CAACvB,CAAC,CAChB2B,SAAS,CAAEJ,GAAG,CAACtB,CAAC,CAChB2B,SAAS,CAAE,CAAC,CACZC,MAAM,CAAE,CAAC,CACTC,MAAM,CAAE,CACV,CAAC,CAAC,CACJ,CACF,CAAC,CAED,KAAM,CAAAC,kBAAkB,CAAGA,CAACC,SAAS,CAAEZ,CAAC,GAAK,CAC3C,KAAM,CAAAa,MAAM,CAAGb,CAAC,CAACC,MAAM,CAACa,QAAQ,CAAC,CAAC,CAClCnB,aAAa,CAACiB,SAAS,CAAE,CACvBN,SAAS,CAAEO,MAAM,CAACjC,CAAC,CACnB2B,SAAS,CAAEM,MAAM,CAAChC,CACpB,CAAC,CAAC,CACJ,CAAC,CAED,mBACEhB,KAAA,QAAKkD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BrD,IAAA,QAAKoD,SAAS,CAAC,kBAAkB,CAACE,KAAK,CAAE,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,YAAY,CAAE,KAAM,CAAE,CAAAH,QAAA,cACzFrD,IAAA,CAACN,KAAK,EACJ+D,GAAG,CAAExB,QAAS,CACdrB,KAAK,CAAEsB,eAAe,CAACtB,KAAM,CAC7BC,MAAM,CAAEqB,eAAe,CAACrB,MAAO,CAC/B6C,OAAO,CAAEtB,gBAAiB,CAC1BuB,KAAK,CAAEvB,gBAAiB,CAAAiB,QAAA,cAExBnD,KAAA,CAACP,KAAK,EAAA0D,QAAA,EAEHzB,YAAY,eACX5B,IAAA,CAACG,cAAc,EAACE,GAAG,CAAEuB,YAAa,CAACtB,YAAY,CAAE8B,gBAAiB,CAAE,CACrE,CAGAN,aAAa,CAAC8B,GAAG,CAAEC,OAAO,eACzB7D,IAAA,CAACe,UAAU,EAETO,EAAE,CAAEuC,OAAO,CAACvC,EAAG,CACfjB,GAAG,CAAEwD,OAAO,CAACC,eAAgB,CAC7B7C,CAAC,CAAE4C,OAAO,CAACE,UAAW,CACtB7C,CAAC,CAAE2C,OAAO,CAACG,UAAW,CACtB7C,QAAQ,CAAE0C,OAAO,CAACI,UAAW,CAC7B7C,KAAK,CAAEyC,OAAO,CAACK,OAAQ,CACvB7C,SAAS,CAAGgB,CAAC,EAAKW,kBAAkB,CAACa,OAAO,CAACvC,EAAE,CAAEe,CAAC,CAAE,EAP/CwB,OAAO,CAACvC,EAQd,CACF,CAAC,EAGG,CAAC,CACH,CAAC,CACL,CAAC,cAENtB,IAAA,QAAKoD,SAAS,CAAC,iBAAiB,CAACE,KAAK,CAAE,CAAEa,SAAS,CAAE,MAAM,CAAEC,OAAO,CAAE,MAAM,CAAEC,eAAe,CAAE,SAAS,CAAEb,YAAY,CAAE,KAAM,CAAE,CAAAH,QAAA,cAC9HrD,IAAA,MAAGsD,KAAK,CAAE,CAAEgB,MAAM,CAAE,GAAG,CAAEC,QAAQ,CAAE,MAAM,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAAnB,QAAA,CACxDxB,aAAa,kCAAA4C,MAAA,CACuB5C,aAAa,CAAC6C,IAAI,EACnD,4DAA4D,CAE/D,CAAC,CACD,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAhD,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}